TEST 1 BEGIN
$ python3 equation.py
There are 45 solutions:
119 * 76 * 16 = 1 * 19 * 7616
133 * 33 * 25 = 1 * 33 * 3325
135 * 91 * 26 = 1 * 35 * 9126
151 * 51 * 34 = 1 * 51 * 5134
181 * 81 * 45 = 1 * 81 * 8145
215 * 42 * 14 = 2 * 15 * 4214
216 * 12 * 15 = 2 * 16 * 1215
227 * 27 * 24 = 2 * 27 * 2724
228 * 14 * 25 = 2 * 28 * 1425
242 * 42 * 35 = 2 * 42 * 4235
248 * 52 * 39 = 2 * 48 * 5239
255 * 22 * 44 = 2 * 55 * 2244
256 * 77 * 44 = 2 * 56 * 7744
272 * 27 * 54 = 2 * 72 * 2754
275 * 21 * 56 = 2 * 75 * 2156
275 * 66 * 55 = 2 * 75 * 6655
277 * 77 * 56 = 2 * 77 * 7756
326 * 78 * 24 = 3 * 26 * 7824
327 * 27 * 25 = 3 * 27 * 2725
348 * 28 * 42 = 3 * 48 * 2842
356 * 28 * 48 = 3 * 56 * 2848
366 * 33 * 55 = 3 * 66 * 3355
378 * 13 * 65 = 3 * 78 * 1365
395 * 19 * 75 = 3 * 95 * 1975
396 * 24 * 75 = 3 * 96 * 2475
398 * 49 * 75 = 3 * 98 * 4975
399 * 99 * 75 = 3 * 99 * 9975
425 * 12 * 24 = 4 * 25 * 1224
454 * 54 * 48 = 4 * 54 * 5448
475 * 48 * 64 = 4 * 75 * 4864
575 * 55 * 66 = 5 * 75 * 5566
626 * 78 * 25 = 6 * 26 * 7825
648 * 36 * 45 = 6 * 48 * 3645
675 * 34 * 68 = 6 * 75 * 3468
681 * 81 * 72 = 6 * 81 * 8172
684 * 42 * 75 = 6 * 84 * 4275
696 * 56 * 84 = 6 * 96 * 5684
735 * 17 * 34 = 7 * 35 * 1734
784 * 57 * 76 = 7 * 84 * 5776
833 * 33 * 32 = 8 * 33 * 3332
896 * 33 * 88 = 8 * 96 * 3388
896 * 58 * 87 = 8 * 96 * 5887
972 * 34 * 68 = 9 * 72 * 3468
975 * 18 * 72 = 9 * 75 * 1872
981 * 81 * 75 = 9 * 81 * 8175

TEST 1 END

TEST 2 BEGIN
$ python3 multiple_2004.py
A = 481, B = 8, N = 48120048 is the solution.

TEST 2 END

TEST 3 BEGIN
$ python3 adjacency_grid.py
    2
 5  8  6
 3  1  4
    7

    2
 6  8  5
 4  1  3
    7

    7
 3  1  4
 5  8  6
    2

    7
 4  1  3
 6  8  5
    2

TEST 3 END

TEST 4 BEGIN
$ python3 division.py
3527876 / 484 = 7289 is the solution.

TEST 4 END

TEST 5 BEGIN
$ echo 1 | python3 pivoting_die.py
Enter the desired goal cell: On cell 1, 3 is at the top, 2 at the front, and 1 on the right.

TEST 5 END

TEST 6 BEGIN
$ echo 12 | python3 pivoting_die.py
Enter the desired goal cell: On cell 12, 3 is at the top, 6 at the front, and 2 on the right.

TEST 6 END

TEST 7 BEGIN
$ echo 123 | python3 pivoting_die.py
Enter the desired goal cell: On cell 123, 4 is at the top, 5 at the front, and 1 on the right.

TEST 7 END

TEST 8 BEGIN
$ echo 1234 | python3 pivoting_die.py
Enter the desired goal cell: On cell 1234, 5 is at the top, 3 at the front, and 1 on the right.

TEST 8 END

TEST 9 BEGIN
$ echo 12345 | python3 pivoting_die.py
Enter the desired goal cell: On cell 12345, 1 is at the top, 3 at the front, and 2 on the right.

TEST 9 END

TEST 10 BEGIN
$ echo 123456 | python3 pivoting_die.py
Enter the desired goal cell: On cell 123456, 3 is at the top, 6 at the front, and 2 on the right.

TEST 10 END

TEST 11 BEGIN
$ echo 1234567 | python3 pivoting_die.py
Enter the desired goal cell: On cell 1234567, 5 is at the top, 6 at the front, and 3 on the right.

TEST 11 END

TEST 12 BEGIN
$ echo 12345678 | python3 pivoting_die.py
Enter the desired goal cell: On cell 12345678, 5 is at the top, 4 at the front, and 6 on the right.

TEST 12 END

TEST 13 BEGIN
$ echo 123456789 | python3 pivoting_die.py
Enter the desired goal cell: On cell 123456789, 3 is at the top, 2 at the front, and 1 on the right.

TEST 13 END

TEST 14 BEGIN
$ echo 1234567890 | python3 pivoting_die.py
Enter the desired goal cell: On cell 1234567890, 2 is at the top, 4 at the front, and 1 on the right.

TEST 14 END

TEST 15 BEGIN
$ echo 12345678901 | python3 pivoting_die.py
Enter the desired goal cell: On cell 12345678901, 1 is at the top, 3 at the front, and 2 on the right.

TEST 15 END

TEST 16 BEGIN
$ echo 123456789012 | python3 pivoting_die.py
Enter the desired goal cell: On cell 123456789012, 4 is at the top, 1 at the front, and 2 on the right.

TEST 16 END

TEST 17 BEGIN
$ echo 1234567890123 | python3 pivoting_die.py
Enter the desired goal cell: On cell 1234567890123, 5 is at the top, 6 at the front, and 3 on the right.

TEST 17 END

